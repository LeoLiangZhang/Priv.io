<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
</head>
<body>
<!-- <script src="http://caja.appspot.com/caja.js"></script> -->
<script src="caja/caja.js"></script> 
<div>This is a CAJA app container2
<div id="caja_guest"></div>
</div>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.js"></script>
<!-- <script src="js/privio.app.container.js"></script> -->

<script type="text/javascript">

var app_url = 'http://priv.io/caja_exp/app1.html';
app_url = 'http://feed.app.priv.io/index.html';
app_url = 'http://caja.app.priv.io/app/cajafeed/index.html';

var uriPolicy = {
		rewrite: function(uri) {
			console.log("rewrite: "+uri);
			//if (/liang/.test(uri)) { return uri; }
			return uri;
		}
};
uriPolicy = null;

caja.initialize({
	cajaServer: '//priv.io/caja/',
	debug: false,
//	es5Mode:false
//	,forceES5Mode: true
});


caja.whenReady(function(){

});

var consoleLog = function(){
	console.log("DEBUG:", arguments);
};

var listeners = [];
var addMessageCallback = function(callback){
	listeners.push(callback);
};

var setDataURI = function(num, data){
	num = num - 0; // make sure it's a number
	if(data.indexOf('data:') == 0){
		$('[data-caja-tmpid='+num+']').attr('src', data);
	}
};

var receiveMessageHandler = function(event){
	consoleLog("receiveMessageHandler begin:", event, event.data);
	var data = event.data;
	//caja.markReadOnlyRecord(event);
    var tamedEvent = data;//caja.tame(data);
    
    for (var i = 0; i < listeners.length; i++) {
      listeners[i](tamedEvent);  
    }
    
	consoleLog("receiveMessageHandler finished:", event);
	
};
//window.addEventListener("message", receiveMessageHandler, false);

var DOMAIN = 'https://priv.io';
var _sanitize = function(arg){
	delete arg['Prototype___'];
	var lst = [];
	for(var i in arg){
		if(i.search("_index;") == 0){
			lst.push(i);
		}
	}
	lst.forEach(function(elm){
		delete arg[elm];
	});
	return arg;
};

var sanitize = function(args){
	var lst = [];
	args.forEach(function(arg){
		arg = _sanitize(arg);
		lst.push(arg);
	});
	return lst;
};

var postMessage = function(message){
	consoleLog('Before post.', message);
	var args = sanitize(message.args);
	var msg = {id:message.id, cmd:message.cmd, args:args};
	//window.parent.postMessage(msg, DOMAIN);
	consoleLog("After post", msg);
};

var paja = {};
/* var make_caja_objects = function(){

	
	paja = {
			postMessage: caja.tame(caja.markFunction(postMessage)),
			addMessageCallback: caja.tame(caja.markFunction(addMessageCallback)),
			setDataURI: caja.tame(caja.markFunction(setDataURI)),
			log: caja.tame(caja.markFunction(consoleLog))
	};
	
	var obj = {
			paja: caja.tame(paja)
	};
	
	return obj;
};
 */
caja.load(document.getElementById('caja_guest'), uriPolicy, function(frame) {
	frame.code(app_url, 'text/html')
	.api({
		postMessage: caja.tame(caja.markFunction(postMessage)),
		addMessageCallback: caja.tame(caja.markFunction(addMessageCallback)),
		setDataURI: caja.tame(caja.markFunction(setDataURI)),
		log: caja.tame(caja.markFunction(consoleLog))
	})
	.run();
});

(function(){
	function getDocHeight() {
		var D = document;
		if(!D.documentElement || !D.body) return 0;
		return Math.max(
				Math.max(D.body.scrollHeight, D.documentElement.scrollHeight),
				Math.max(D.body.offsetHeight, D.documentElement.offsetHeight),
				Math.max(D.body.clientHeight, D.documentElement.clientHeight)
		);
	}
	var height = getDocHeight();
	
	var updateFrameHeight = function(){
		var cmd = 'updateFrameHeight';
		var args = $.makeArray(arguments);
		var data = {id: new Date().getTime()+"+"+height, cmd:cmd, args: args};
		//paja.postMessage(data);
		//var deferred = jQuery.Deferred();
		//addWaiting(data.id, {deferred: deferred, id:data.id});
		return null;
	};
	
	var eventhandler = function(){
		var h = getDocHeight();
		if(height != h){
			height = h;
			updateFrameHeight(height+30);
//			console.info('App height', height);
		}
	};
	var elm = document.documentElement;
//	elm.addEventListener('DOMAttrModified', eventhandler, false);
//	window.addEventListener('resize', eventhandler, false);
	window.addEventListener('scroll', eventhandler, false);
	elm.addEventListener('DOMSubtreeModified', eventhandler, false);
})(); 



</script>

</body>
</html>